node_modules\formiojs\templates\bootstrap\builderPlaceholder\form.ejs.js: 
 - drag and drop a form component = form コンポーネントをドラグ＆ドロップする

node_modules\formiojs\templates\bootstrap\builderSidebar\form.ejs.js:
 - Search field(s) = フィールド検索

node_modules\formiojs\templates\bootstrap\builderEditForm\form.ejs.js:
 - component = 成分
 - Help = ヘルプ
 - preview = プレビュー 
 - save = 保存
 - cancel = キャンセル
 - remove = 除去

node_modules\formiojs\translations\en.js:
 - is required = 必要とされている

node_modules\formiojs\components\_classes\component\Component.form.js:
 - display = 表示
 - data = データ
 - validation = バリデーション
 - conditional = 条件
 - logic = ロジック
 - layout = レイアウト

node_modules\formiojs\components\_classes\component\editForm:

 - DISPLAY.JS:
  - Label = ラベル
  - Field Label = フィールドラベル
  - The label for this field that will appear next to it. = このフィールドのラベルであり、その隣に配置される。
  - Hidden = ヒドゥン
  - A hidden field is still a part of the form, but is hidden from view. = ヒドゥンフィールドとはフォームの一部ですが、非表示となる。
  - Custom CSS Class = CSSクラスのカスタマイズ
  - Custom CSS class to add to this component. = CSSクラスをカスタマイズし、このコンポーネントに追加する。
  - Modal Edit = 編集モーダル
  - Opens up a modal to edit the value of this component. = モーダルを開き、このコンポーネントの値を編集する。
  - Html tag = HTMLタグ
  - Html Element tag = HTML要素タグ
  - The tag of this HTML element. = このHTML要素のタグです。
  - css class = CSSクラス
  - The CSS class for this HTML element. = このHTML要素のCSSクラスです。
  - Attributes = 属性
  - Value = 値
  - The attributes for this HTML element. Only safe attributes are allowed,   - such as src, href, and title. = このHTML要素の属性です。src、href、titleなどの安全な属性しか許可されない。
  - Content = 内容
  - The content of this HTML element. = このHTML要素の内容です。
  - Refresh On Change = 変更時のリフレッシュ
  - Rerender the field whenever a value on the form changes. = フォームの値が変更されるたびにフィールドを再レンダリングされる。

 - API.JS:
  - Property Name = プロパティ名
  - The name of this field in the API endpoint. = APIエンドポイントのこのフィールドの名称。
  - Field Tags = フィールドタグ
  - Tag the field for use in custom logic. = カスタマイズロジックで使用するフィールドにタグを付ける。
  - Custom Properties = カスタマイズプロパティ
  - This allows you to configure any custom properties for this component. = これにより、このコンポーネントのカスタマイズプロパティを構成できる。	
  - Value = 値
 - CONDITTIONAL.JS:
   - Simple = シンプル
   - This component should Display: = このコンポーネントは次を表示する必要がある。
   - True
   - False
   - When the form component: = フォームコンポーネントの場合
   - Has the value: = 値有
   - Advanced Conditions = アドバンス条件

 - LOGIC.js:
  - Advanced Logic = アドバンスロジック
  - Advanced Logic Configured = アドバンスロジック構成
  - Add Logic = ロジック追加
  - Save Logic = ロジック保存
  - Logic Name = ロジック名
  - Trigger = トリガー
  - Type = タイプ
  - Simple = シンプル
  - Javascript = Javascript
  - JSON Logic = JSONロジック
  - Event = エベント
  - Show = 表示

 - LAYOUT.js:
  - HTML Attributes.: HTML属性
  - Provide a map of HTML attributes for component\'s input element (attributes provided by other component settings or other attributes generated by form.io take precedence over attributes in this grid). = コンポーネントの入力要素のHTML属性のマップを提供する。
（他のコンポーネント設定によって提供される属性またはform.ioによって生成される他の属性は、このグリッドの属性よりも優先される）
  - Attribute Name. = 属性名
  - Attribute Value. = 属性値
  - Add Attribute. = 属性追加
  - PDF Overlay = PDFオーバーレイ
  - The settings inside apply only to the PDF forms. = 内部の設定はPDFフォームにのみ適用される。
  - Style = スタイル
  - Custom styles that should be applied to this component when rendered in PDF. = PDFでレンダリングする時にこのコンポーネントに適用する必要となるカスタマイズスタイル。
  - Page = ページ
  - The PDF page to place this component. = このコンポーネントを配置するためのPDFページ
  - Left = 左
  - The left margin within a page to place this component. = このコンポーネント対する左のマージンを指定するプロパティ。
  - Top = トップ
  - The top margin within a page to place this component. = このコンポーネント対する上のマージンを指定するプロパティ。
  - Width = 幅
  - The width of the component (in pixels). = コンポーネントの幅です。（～ピクセル）
  - Height = ハイツ（高さ）
  - The height of the component (in pixels). = コンポーネントの高さです。（～ピクセル）
  - Column Properties = カラムプロパティ
  - The width, offset, push, and pull settings for each column. =各カラムの幅、オフセット、プッシュ、プル等の設定
  - size = サイズ
  - width = 幅
  - offset = オフセット
  - push = プッシュ
  - pull = プル
  - add column = カラム追加
  - Auto adjust columns = カラム自動調整
  - Will automatically adjust columns based on if nested components are hidden. =ネスト化されたコンポーネントが非表示になることによって、カラムを自動調整する。
  - Hide Label = ラベルの非表示
  - Hide the label (title, if no label) of this component. This allows you to show - the label in the form builder, but not when it is rendered. =このコンポーネントのラベルを非表示にする。これにより、フォームビルダーでラベルを表示できるが、レンダリング時に表示することはできない。
  - Number of Rows = 行数
  - Enter the number or rows that should be displayed by this table. =このテーブルで表示したい行数を入力する。
  - Number of Columns = カラム数
  - Enter the number or columns that should be displayed by this table. = このテーブルで表示したいカラム数を入力する。
  - Clone Row Components = 行のコンポーネントクローン 
  - Check this if you would like 'CLONE'... = 必要に応じてチェックする
  - Cell Alignment =セルの配置 
  - Horizontal alignment for cells of the table. = テーブルのセルを横配置する。
  - Striped = ストライプ
  - This will stripe the table if checked. = チェックを入れると、テーブルがストライプ化される。
  - Bordered = ボーダー
  - This will border the table if checked. = チェックを入れると、テーブルの枠線が表示される。
  - Hover = ホバー
  - Highlight a row on hover. = ホバーで行を強調表示する。
  - Condensed = コンデンス
  - Condense the size of the table. = テーブルのサイズを縮小する
  - left = 左
  - right = 正しい
  - center = 中心	
  
node_modules\formiojs\WebformBuilder.js:
 - copy = コピー
 - Paste below = 以下に貼り付ける
 - move = 移動
 - edit = 編集
 - edit json = JSON編集
 - remove = 除去
